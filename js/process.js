var w = "100%";
var h = "100%";

var svg = d3.select("#graph");
var play = d3.select("#play");
var paused = false;
//console.log(svg.height);
//console.log(back.innerHTML);
w = parseInt(svg.style("width"), 10);
h = parseInt(svg.style("height"), 10);



var stepRecord = [[18, 4], [53, 1], [6, 3], [92, 1], [6, 4], [67, 2], [98, 2], [16, 3], [18, 1], [99, 2], [16, 4], [59, 4], [76, 4], [99, 1], [9, 3], [87, 3], [76, 3], [53, 4], [8, 3], [63, 2], [19, 3], [26, 1], [16, 3], [26, 4], [8, 2], [92, 4], [92, 1], [16, 4], [67, 1], [14, 1], [16, 3], [15, 4], [77, 3], [12, 1], [52, 3], [69, 3], [12, 2], [11, 4], [43, 2], [49, 1], [9, 2], [52, 4], [46, 1], [53, 1], [45, 3], [59, 3], [49, 2], [17, 3], [17, 4], [7, 1], [62, 3], [69, 4], [8, 3], [7, 4], [62, 4], [83, 3], [77, 4], [11, 1], [20, 2], [16, 4], [70, 4], [57, 3], [26, 1], [73, 1], [57, 2], [53, 4], [14, 2], [51, 3], [70, 1], [86, 2], [6, 3], [59, 4], [12, 1], [73, 4], [67, 2], [73, 1], [59, 3], [55, 1], [45, 2], [12, 2], [92, 4], [99, 2], [43, 3], [45, 3], [62, 3], [62, 4], [99, 1], [12, 1], [98, 3], [19, 2], [49, 1], [62, 3], [51, 2], [55, 2], [12, 2], [23, 3], [23, 4], [70, 3], [30, 1], [19, 3], [23, 3], [70, 4], [49, 2], [98, 2], [51, 3], [92, 1], [46, 4], [74, 1], [20, 1], [20, 2], [13, 3], [13, 2], [80, 2], [17, 3], [85, 3], [85, 2], [17, 4], [45, 2], [40, 2], [86, 1], [41, 1], [54, 4], [80, 3], [16, 3], [37, 3], [98, 3], [62, 4], [20, 1], [37, 4], [3, 4], [41, 4], [3, 3], [6, 4], [30, 4], [51, 2], [6, 3], [62, 3], [62, 4], [19, 2], [11, 4], [7, 1], [7, 4], [7, 1], [55, 4], [23, 4], [83, 2], [54, 1], [46, 1], [8, 2], [77, 3], [62, 3], [3, 4], [17, 3], [46, 4], [43, 2], [12, 4], [6, 4], [57, 4], [62, 4], [43, 3], [57, 2], [46, 1], [53, 1], [79, 3], [12, 2], [40, 4], [20, 2], [86, 2], [46, 4], [9, 3], [11, 1], [49, 1], [60, 2], [52, 3], [30, 1], [54, 4], [3, 3], [67, 4], [11, 4], [53, 4], [52, 4], [53, 1], [67, 1], [49, 2], [53, 4], [9, 2], [3, 4], [63, 3], [53, 1], [67, 2], [63, 2], [7, 4], [7, 1], [23, 3], [11, 1], [53, 4], [62, 3], [60, 1], [79, 4], [63, 3], [11, 4], [40, 2], [63, 2], [86, 1], [9, 4], [39, 4], [87, 2], [79, 3], [40, 4], [3, 3], [92, 4], [9, 2], [52, 3], [25, 3], [23, 4], [40, 2], [63, 3], [92, 1], [49, 1], [63, 2], [19, 3], [85, 4], [40, 4], [12, 4], [25, 4], [23, 3], [52, 4], [49, 2], [23, 4], [3, 4], [53, 1], [60, 2], [85, 2], [19, 2], [85, 4], [48, 4], [67, 1], [59, 4], [55, 2], [6, 3], [16, 4], [85, 2], [77, 4], [9, 4], [1, 1], [39, 1], [7, 4], [54, 1], [3, 3], [98, 2], [98, 3], [48, 2], [23, 3], [43, 2], [55, 4], [40, 1], [53, 4], [23, 4], [59, 3], [77, 3], [16, 3], [14, 4], [14, 2], [63, 4], [98, 4], [1, 4], [23, 3], [80, 4], [54, 4], [78, 4], [37, 3], [78, 3], [12, 1], [55, 2], [40, 4], [78, 4], [60, 1], [43, 4], [37, 4], [45, 4], [19, 4], [40, 1], [53, 1], [80, 3], [53, 4], [72, 3], [75, 4], [6, 4], [75, 3], [11, 1], [54, 1], [75, 2], [79, 4], [92, 4], [63, 3], [78, 3], [75, 4], [72, 4], [46, 1], [46, 4], [23, 4], [6, 3], [57, 4], [32, 4], [77, 4], [67, 2], [57, 2], [54, 4], [98, 3], [77, 3], [74, 4], [78, 4], [78, 3], [57, 4], [86, 2], [92, 1], [12, 2], [79, 3], [55, 4], [77, 4], [12, 1], [48, 1], [53, 1], [63, 4], [74, 1], [62, 4], [57, 2], [77, 3], [98, 4], [7, 1], [55, 1], [62, 3], [48, 2], [55, 2], [79, 4], [54, 1], [77, 4], [23, 3], [63, 3], [23, 4], [78, 4], [87, 4], [86, 1], [84, 4], [78, 3], [12, 2], [57, 4], [78, 4], [79, 3], [86, 2], [23, 3], [23, 4], [7, 4], [6, 4], [98, 3], [43, 3], [77, 3], [69, 3], [62, 4], [57, 2], [24, 3], [24, 4], [79, 4], [33, 4], [98, 4], [69, 4], [53, 4], [74, 4], [98, 3], [43, 4], [53, 1], [78, 3], [99, 2], [99, 1], [6, 3], [23, 3], [43, 3], [62, 3], [8, 4], [23, 4], [62, 4], [7, 1], [3, 4], [6, 4], [6, 3], [77, 4], [40, 2], [11, 2], [8, 2], [7, 4], [8, 4], [78, 4], [43, 4], [62, 3], [43, 3], [76, 4], [78, 3], [3, 3], [15, 2], [15, 4], [6, 4], [74, 1], [6, 3], [62, 4], [33, 3], [15, 1], [19, 3], [11, 1], [99, 2], [46, 1], [19, 4], [55, 4], [55, 2], [30, 4], [98, 4], [77, 3], [20, 1], [57, 4], [16, 4], [57, 2], [76, 3], [20, 2], [59, 4], [52, 3], [98, 3], [7, 1], [62, 3], [7, 4], [19, 3], [99, 1], [57, 4], [52, 4], [57, 2], [6, 4], [30, 1], [46, 4], [1, 1], [77, 4], [62, 4], [3, 4], [41, 1], [3, 3], [57, 4], [54, 4], [33, 4], [23, 3], [59, 3], [83, 4], [30, 4], [99, 2], [43, 4], [11, 2], [45, 3], [43, 3], [62, 3], [17, 4], [20, 1], [20, 2], [99, 1], [51, 4], [37, 3], [17, 3], [45, 4], [11, 1], [24, 3], [39, 4], [37, 4], [78, 4], [7, 1], [23, 4], [13, 4], [78, 3], [38, 1], [37, 3], [1, 4], [41, 4], [20, 1], [13, 2], [62, 4], [73, 4], [30, 1], [57, 2], [51, 2], [92, 4], [53, 4], [41, 1], [19, 4], [19, 3], [99, 2], [81, 4], [86, 1], [76, 4], [19, 4], [41, 4], [20, 2], [53, 1], [57, 4], [82, 2], [11, 2], [56, 3], [78, 4], [82, 1], [92, 1], [22, 3], [23, 3], [38, 4], [23, 4], [69, 3], [83, 2], [99, 1], [43, 4], [57, 2], [73, 1], [20, 1], [20, 2], [19, 3], [62, 3], [22, 4], [56, 4], [99, 2], [98, 4], [98, 3], [62, 4], [62, 3], [53, 2], [69, 4], [99, 1], [79, 3], [99, 2], [53, 1], [37, 4], [36, 3], [63, 4], [76, 3], [19, 4], [81, 3], [35, 4], [24, 4], [83, 4], [53, 2], [20, 1], [83, 2], [15, 4], [19, 3], [99, 1], [57, 4], [62, 4], [43, 3], [53, 4], [1, 1], [16, 3], [11, 4], [77, 3], [6, 3], [7, 4], [19, 4], [40, 4], [40, 2], [11, 2], [1, 4], [6, 4], [78, 3], [11, 4], [6, 3], [53, 1], [83, 4], [98, 4], [19, 3], [36, 4], [76, 4], [23, 3], [20, 2], [83, 2], [35, 1], [33, 3], [37, 3], [11, 1], [86, 2], [78, 4], [20, 1], [76, 3], [62, 3], [62, 4], [19, 4], [52, 3], [20, 2], [72, 3], [57, 2], [72, 4], [52, 4], [33, 4], [33, 3], [43, 4], [52, 3], [80, 4], [1, 1], [45, 2], [1, 4], [39, 1], [7, 1], [8, 2], [62, 3], [76, 4], [98, 3], [80, 3], [11, 4], [1, 1], [80, 4], [57, 4], [78, 3], [62, 4], [54, 1], [67, 1], [67, 2], [78, 4], [80, 3], [11, 2], [99, 2], [54, 4], [62, 3], [98, 4], [80, 4], [25, 3], [59, 4], [59, 3], [24, 3], [6, 4], [54, 1], [55, 4], [57, 2], [49, 1], [24, 4], [84, 3], [55, 2], [84, 4], [11, 4], [69, 3], [19, 2], [74, 4], [24, 3], [11, 1], [19, 4], [59, 4], [49, 2], [38, 1], [19, 2], [80, 3], [23, 4], [24, 4], [57, 4], [86, 1], [1, 4], [78, 3], [23, 3], [87, 2], [78, 4], [62, 4], [94, 3], [57, 2], [30, 4], [20, 1], [41, 1], [42, 3], [45, 4], [45, 2], [22, 1], [11, 4], [74, 1], [86, 2], [21, 3], [33, 4], [53, 4], [99, 1], [80, 4], [21, 4], [42, 4], [11, 2], [72, 1], [72, 4], [53, 1], [25, 4], [80, 3], [38, 4], [87, 4], [33, 3], [54, 4], [25, 3], [72, 1], [7, 4], [1, 1], [25, 4], [1, 4], [59, 3], [49, 1], [78, 3], [52, 4], [49, 2], [22, 4], [78, 4], [53, 2], [30, 1], [78, 3], [80, 4], [99, 2], [19, 4], [53, 1], [94, 4], [49, 1], [72, 4], [1, 1], [62, 3], [80, 3], [76, 3], [87, 2], [76, 4], [87, 4], [62, 4], [98, 3], [94, 3], [24, 3], [24, 4], [62, 3], [52, 3], [33, 4], [76, 3], [55, 4], [94, 4], [55, 2], [45, 4], [41, 4], [81, 4], [41, 1], [49, 2], [53, 2], [25, 3], [25, 4], [53, 1], [52, 4], [41, 4], [63, 3], [40, 4], [69, 4], [78, 4], [57, 4], [81, 3], [77, 4], [62, 4], [76, 4], [11, 4], [57, 2], [77, 3], [8, 4], [99, 1], [62, 3], [81, 4], [54, 1], [37, 4], [62, 4], [40, 2], [46, 1], [62, 3], [76, 3], [6, 3], [77, 4], [53, 4], [37, 3], [79, 4], [11, 1], [24, 3], [63, 4], [20, 2], [60, 2], [63, 3], [57, 4], [80, 4], [46, 4], [81, 3], [60, 1], [17, 4], [3, 4], [57, 2], [98, 4], [46, 1], [92, 4], [46, 4], [3, 3], [49, 1], [19, 3], [49, 2], [41, 1], [19, 4], [46, 1], [41, 4], [6, 4], [20, 1], [69, 3], [93, 1], [80, 3], [94, 3], [77, 3], [6, 3], [74, 4], [94, 4], [24, 4], [55, 4], [37, 4], [37, 3], [38, 3], [38, 4], [80, 4], [38, 3], [38, 4], [3, 4], [38, 3], [1, 4], [17, 3], [99, 2], [55, 2], [3, 3], [33, 3], [49, 1], [40, 4], [37, 4], [7, 3], [8, 2], [93, 4], [8, 4], [69, 4], [77, 4], [37, 3], [20, 2], [37, 4], [1, 1], [17, 4], [20, 1], [72, 3], [24, 3], [72, 4], [49, 2], [20, 2], [11, 2], [55, 4], [37, 3], [16, 4], [37, 4], [7, 4], [57, 4], [24, 4], [62, 4], [37, 3], [27, 3], [78, 3], [43, 3], [92, 1], [80, 3], [53, 2], [63, 4], [43, 4], [16, 3], [78, 4], [77, 3], [40, 2], [85, 4], [80, 4], [59, 4], [20, 1], [62, 3], [23, 4], [6, 4], [93, 1], [85, 2], [38, 4], [76, 4], [57, 2], [55, 2], [83, 4], [3, 4], [83, 2], [99, 1], [24, 3], [24, 4], [93, 4], [67, 1], [3, 3], [76, 3], [62, 4], [41, 1], [20, 2], [76, 4], [84, 3], [52, 3], [53, 1], [67, 2], [41, 4], [52, 4], [93, 1], [32, 3], [30, 4], [69, 3], [69, 4], [62, 3], [11, 1], [22, 1], [32, 4], [3, 4], [3, 3], [32, 3], [32, 4], [6, 3], [73, 4], [20, 1], [24, 3], [73, 1], [6, 4], [20, 2], [67, 1], [45, 2], [84, 4], [34, 1], [1, 4], [1, 1], [67, 2], [62, 4], [69, 3], [8, 2], [60, 2], [24, 4], [40, 1], [62, 3], [40, 2], [69, 4], [28, 1], [45, 4], [45, 2], [45, 4], [56, 1], [80, 3], [62, 4], [42, 1], [17, 3], [38, 3], [79, 3], [60, 1], [30, 1], [42, 4], [80, 4], [30, 4], [57, 4], [23, 3], [56, 4], [38, 4], [57, 2], [69, 3], [52, 3], [62, 3], [60, 2], [8, 4], [62, 4], [22, 4], [30, 1], [52, 4], [34, 4], [62, 3], [16, 4], [55, 4], [62, 4], [69, 4], [1, 4], [23, 4], [28, 4], [55, 2], [62, 3], [60, 1], [6, 3], [93, 4], [52, 3], [83, 4], [6, 4], [80, 3], [1, 1], [1, 4], [38, 3], [55, 4], [43, 3], [60, 2], [24, 3], [76, 3], [1, 1], [82, 2], [57, 4], [55, 2], [24, 4], [43, 4], [80, 4], [49, 1], [33, 4], [23, 3], [38, 4], [78, 3], [41, 1], [49, 2], [11, 4], [11, 1], [40, 1], [53, 4], [18, 2], [43, 3], [18, 1], [52, 4], [23, 4], [40, 2], [81, 4], [53, 1], [82, 1], [62, 4], [74, 1], [57, 2], [45, 2], [83, 2], [43, 4], [23, 3], [16, 3], [40, 4], [45, 4], [40, 2], [62, 3], [55, 4], [37, 4], [8, 2], [74, 4], [59, 3], [55, 2], [92, 4], [67, 1], [41, 4], [62, 4], [77, 4], [53, 4], [45, 2], [12, 1], [12, 2], [87, 2], [40, 1], [79, 4], [86, 1], [40, 2], [86, 2], [6, 3], [62, 3], [1, 4], [17, 4], [76, 4], [7, 3], [19, 2], [62, 4], [87, 4], [93, 1], [40, 1], [17, 3], [1, 1], [50, 4], [22, 1], [7, 4], [67, 2], [19, 4], [78, 4], [67, 1], [28, 1], [7, 3], [7, 4], [40, 2], [67, 2], [53, 1], [34, 1], [57, 4], [42, 1], [53, 4], [76, 3], [19, 2], [80, 3], [76, 4], [42, 4], [53, 1], [60, 1], [1, 4], [17, 4], [22, 4], [57, 2], [1, 1], [57, 4], [80, 4], [62, 3], [17, 3], [28, 4], [17, 4], [18, 4], [67, 1], [18, 1], [17, 3], [11, 2], [49, 1], [57, 2], [49, 2], [17, 4], [16, 4], [86, 1], [86, 2], [37, 3], [8, 4], [14, 1], [80, 3], [28, 1], [28, 4], [24, 3], [19, 4], [53, 2], [14, 2], [76, 3], [4, 1], [53, 4], [90, 1], [28, 1], [11, 4], [29, 4], [78, 3], [24, 4], [16, 3], [60, 2], [90, 4], [38, 3], [8, 2], [60, 1], [24, 3], [42, 1], [1, 4], [38, 4], [78, 4], [38, 3], [72, 3], [37, 4], [72, 4], [67, 2], [72, 3], [78, 3], [76, 4], [78, 4], [69, 3], [8, 4], [17, 3], [78, 3], [28, 4], [45, 4], [52, 3], [11, 1], [11, 2], [42, 4], [49, 1], [38, 4], [80, 4], [37, 3], [37, 4], [78, 4], [28, 1], [52, 4], [78, 3], [69, 4], [37, 3], [38, 3], [3, 4], [79, 3], [6, 4], [8, 2], [11, 1], [60, 2], [1, 1], [24, 4], [16, 4], [16, 3], [60, 1], [90, 1], [45, 2], [24, 3], [62, 4], [11, 4], [78, 4], [20, 1], [49, 2], [69, 3], [16, 4], [79, 4], [16, 3], [53, 1], [19, 2], [21, 1], [21, 4], [77, 3], [69, 4], [87, 2], [11, 2], [62, 3], [77, 4], [53, 4], [45, 4], [20, 2], [49, 1], [49, 2], [59, 4], [53, 1], [90, 4], [75, 2], [59, 3], [62, 4], [28, 4], [6, 3], [28, 1], [17, 4], [59, 4], [57, 4], [19, 4], [62, 3], [81, 3], [24, 4], [24, 3], [11, 4], [60, 2], [26, 4], [60, 1], [57, 2], [42, 1], [49, 1], [49, 2], [53, 4], [77, 3], [77, 4], [99, 2], [17, 3], [17, 4], [33, 3], [75, 4], [24, 4], [7, 3], [28, 4], [26, 1], [11, 1], [40, 4], [59, 3], [28, 1], [55, 4], [87, 4], [78, 3], [72, 4], [38, 4], [3, 3], [11, 4], [18, 4], [38, 3], [24, 3], [20, 1], [57, 4], [22, 1], [15, 3], [15, 4], [3, 4], [43, 3], [8, 4], [76, 3], [12, 4], [18, 1], [50, 1], [85, 4], [43, 4], [1, 4], [42, 4], [29, 3], [1, 1], [16, 4], [12, 2], [4, 4], [4, 1], [82, 2], [7, 4], [20, 2], [84, 3], [20, 1], [3, 3], [16, 3], [57, 2], [29, 4], [15, 3], [24, 4], [15, 4], [57, 4], [84, 4], [38, 4], [40, 2], [18, 2], [38, 3], [8, 2], [22, 4], [18, 1], [85, 2], [33, 4], [11, 2], [33, 3], [45, 2], [78, 4], [80, 3], [56, 1], [80, 4], [57, 2], [78, 3], [82, 1], [57, 4], [4, 4], [7, 3], [37, 4], [1, 4], [1, 1], [42, 1], [78, 4], [17, 3], [57, 2], [59, 4], [56, 4], [99, 1], [22, 1], [99, 2], [78, 3], [11, 4], [59, 3], [20, 2], [11, 1], [78, 4], [38, 4], [56, 1], [80, 3], [82, 2], [86, 1], [40, 4], [55, 2], [34, 4], [80, 4], [8, 4], [78, 3], [19, 2], [73, 4], [80, 3], [56, 4], [40, 1], [20, 1], [20, 2], [16, 4], [76, 4], [20, 1], [60, 2], [19, 4], [16, 3], [76, 3], [56, 1], [76, 4], [76, 3], [42, 4], [37, 3], [7, 4], [60, 1], [94, 1], [3, 4], [40, 2], [20, 2], [78, 4], [77, 3], [22, 4], [82, 1], [76, 4], [33, 4], [8, 2], [33, 3], [8, 4], [17, 4], [11, 4], [49, 1], [41, 1], [74, 1], [49, 2], [86, 2], [3, 3], [43, 3], [82, 2], [83, 4], [37, 4], [76, 3], [45, 4], [43, 4], [11, 1], [78, 3], [22, 1], [57, 4], [82, 1], [41, 4], [85, 4], [85, 2], [84, 3], [74, 4], [32, 3], [23, 4], [34, 1], [11, 2], [77, 4], [43, 3], [40, 4], [73, 1], [40, 2], [43, 4], [38, 3], [38, 4], [23, 3], [57, 2], [28, 4], [50, 4], [7, 3], [20, 1], [78, 4], [73, 4], [26, 4], [32, 4], [20, 2], [73, 1], [18, 4], [43, 3], [20, 1], [17, 3], [84, 4], [99, 1], [78, 3], [20, 2], [11, 4], [26, 1], [83, 2], [67, 1], [17, 4], [17, 3], [11, 1], [38, 3], [45, 2], [67, 2], [18, 1], [8, 2], [45, 4], [43, 4], [17, 4], [55, 4], [99, 2], [17, 3], [11, 2], [79, 3], [50, 1], [33, 4], [38, 4], [38, 3], [94, 4], [7, 4], [28, 1], [43, 3], [43, 4], [8, 4], [78, 4], [33, 3], [80, 4], [56, 4], [92, 1], [49, 1], [78, 3], [34, 4], [53, 1], [28, 4], [22, 4], [80, 3], [38, 4], [34, 1], [86, 1], [37, 3], [37, 4], [37, 3], [45, 2], [53, 4], [55, 2], [77, 3], [29, 3], [74, 1], [77, 4], [8, 2], [29, 4], [3, 4], [72, 3], [1, 4], [24, 3], [74, 4], [30, 4], [72, 4], [11, 1], [22, 1], [1, 1], [3, 3], [82, 2], [20, 1], [49, 2], [41, 1], [45, 4], [79, 4], [78, 4], [49, 1], [87, 2], [41, 4], [3, 4], [78, 3], [30, 1], [18, 2], [22, 4], [78, 4], [38, 3], [28, 1], [11, 4], [33, 4], [76, 4], [28, 4], [87, 4], [76, 3], [87, 2], [87, 4], [17, 4], [77, 3], [3, 3], [8, 4], [57, 4], [76, 4], [77, 4], [76, 3], [78, 3], [55, 4], [55, 2], [43, 3], [17, 3], [57, 2], [45, 2], [40, 4], [38, 4], [43, 4], [77, 3], [40, 2], [34, 4], [77, 4], [3, 4], [72, 3], [93, 4], [77, 3], [62, 4], [49, 2], [38, 3], [55, 4], [93, 1], [19, 2], [6, 4], [93, 4], [62, 3], [2, 1], [52, 3], [24, 4], [55, 2], [50, 2], [8, 2], [40, 4], [40, 2], [78, 4], [80, 4], [80, 3], [76, 4], [53, 1], [19, 4], [33, 3], [1, 4], [50, 1], [49, 1], [53, 4], [76, 3], [69, 3], [40, 4], [79, 3], [24, 3], [2, 2], [40, 2], [24, 4], [52, 4], [78, 3], [79, 4], [11, 1], [20, 2], [43, 3], [55, 4], [20, 1], [23, 4], [69, 4], [8, 4], [80, 4], [53, 1], [79, 3], [45, 4], [43, 4], [84, 3], [52, 3], [50, 2], [83, 4], [84, 4], [11, 2], [78, 4], [55, 2], [50, 1], [59, 4], [46, 4], [78, 3], [49, 2], [23, 3], [26, 2], [57, 4], [59, 3], [69, 3], [49, 1], [2, 1], [3, 3], [79, 4], [17, 4], [43, 3], [84, 3], [6, 3], [72, 4], [11, 4], [49, 2], [26, 1], [51, 4], [19, 3], [52, 4], [19, 4], [69, 4], [11, 2], [80, 3], [37, 4], [72, 3], [84, 4], [38, 4], [33, 4], [54, 4], [51, 2], [11, 1], [74, 1], [81, 4], [76, 4], [76, 3], [23, 4], [77, 4], [23, 3], [11, 2], [1, 1], [50, 2], [24, 3], [19, 3], [37, 3], [53, 4], [16, 4], [39, 4], [20, 2], [50, 1], [59, 4], [39, 1], [1, 4], [18, 1], [11, 1], [57, 2], [37, 4], [40, 1], [72, 4], [29, 3], [59, 3], [81, 3], [80, 4], [2, 2], [86, 2], [83, 2], [16, 3], [81, 4], [16, 4], [80, 3], [81, 3], [6, 4], [1, 1], [16, 3], [17, 3], [16, 4], [20, 1], [23, 4], [23, 3], [17, 4], [53, 1], [37, 3], [20, 2], [53, 4], [62, 4], [16, 3], [24, 4], [20, 1], [40, 2], [69, 3], [1, 4], [33, 3], [20, 2], [57, 4], [98, 3], [57, 2], [27, 4], [20, 1], [62, 3], [24, 3], [19, 4], [19, 3], [84, 3], [43, 4], [43, 3], [69, 4], [56, 3], [82, 1], [62, 4], [19, 4], [41, 1], [8, 2], [53, 1], [16, 4], [16, 3], [69, 3], [15, 1], [39, 4], [41, 4], [45, 2], [56, 4], [74, 4], [62, 3], [57, 4], [77, 3], [17, 3], [77, 4], [20, 2], [32, 3], [79, 3], [86, 1], [69, 4], [75, 3], [1, 1], [11, 2], [20, 1], [45, 4], [15, 4], [99, 1], [7, 1], [63, 3], [74, 1], [77, 3], [62, 4], [7, 4], [62, 3], [20, 2], [62, 4], [55, 4], [41, 1], [57, 2], [1, 4], [57, 4], [55, 2], [29, 4], [57, 2], [7, 1], [1, 1], [35, 4], [75, 4], [31, 4], [60, 2], [69, 3], [24, 4], [52, 3], [57, 4], [75, 3], [31, 1], [69, 4], [87, 3], [24, 3], [57, 2], [52, 4], [35, 1], [62, 3], [30, 4], [62, 4], [11, 1], [43, 4], [60, 1], [87, 2], [38, 1], [43, 3], [1, 4], [86, 2], [20, 1], [39, 1], [41, 4], [24, 4], [69, 3], [11, 2], [99, 2], [19, 3], [19, 4], [99, 1], [72, 1], [39, 4], [52, 3], [11, 1], [19, 3], [3, 4], [41, 1], [79, 4], [19, 4], [41, 4], [22, 1], [69, 4], [73, 4], [19, 3], [45, 2], [37, 4], [56, 1], [17, 4], [17, 3], [9, 2], [74, 4], [22, 4], [40, 4], [86, 1], [37, 3], [11, 4], [40, 2], [92, 4], [49, 1], [86, 2], [19, 2], [56, 4], [92, 1], [56, 1], [40, 4], [11, 1], [92, 4], [19, 3], [56, 4], [3, 3], [19, 2], [49, 2], [99, 2], [49, 1], [69, 3], [69, 4], [45, 3], [19, 3], [45, 2], [92, 1], [3, 4], [87, 3], [41, 1], [52, 4], [17, 4], [19, 2], [1, 1], [86, 1], [40, 2], [77, 4], [20, 2], [40, 1], [49, 2], [92, 4], [29, 3], [63, 2], [56, 1], [35, 4], [92, 1], [20, 1], [40, 2], [99, 1], [37, 4], [26, 4], [73, 1], [18, 4], [9, 3], [1, 4], [20, 2], [41, 4], [28, 1], [20, 1], [16, 4], [28, 4], [73, 4], [70, 3], [24, 1], [82, 4], [19, 3], [22, 1], [57, 3], [31, 4], [82, 1], [15, 1], [24, 4], [11, 2], [56, 4], [11, 1], [3, 3], [10, 4], [16, 3], [56, 1], [92, 4], [22, 4], [87, 2], [22, 1], [92, 1], [19, 2], [76, 4], [41, 1], [63, 3], [59, 4], [81, 4], [74, 1], [16, 4], [86, 2], [59, 3], [70, 2], [37, 3], [38, 4], [73, 1], [56, 4], [23, 4], [45, 3], [57, 2], [77, 3], [22, 4], [77, 4], [19, 3], [22, 1], [76, 3], [26, 1], [7, 4], [7, 1], [75, 2], [75, 3], [26, 4], [70, 3], [26, 1], [75, 2], [33, 4], [1, 1], [5, 4], [7, 4], [57, 3], [23, 3], [19, 2], [38, 1], [30, 1], [72, 4], [67, 1], [38, 4], [22, 4], [32, 2], [55, 3], [19, 3], [74, 4], [62, 3], [69, 3], [20, 2], [74, 1], [55, 2], [94, 3], [24, 3], [18, 1], [26, 4], [24, 4], [89, 4], [89, 1], [84, 2], [42, 3], [50, 4], [42, 4], [20, 1], [76, 2], [23, 4], [57, 2], [20, 2], [57, 3], [67, 2], [59, 4], [49, 1], [20, 1], [6, 3], [11, 2], [50, 1], [50, 4], [3, 4], [33, 2], [11, 1], [1, 4], [43, 2], [7, 1], [41, 4], [81, 2], [9, 2], [72, 3], [76, 3], [6, 4], [94, 4], [59, 3], [43, 3], [49, 2], [77, 3], [18, 4], [24, 3], [9, 3], [86, 1], [37, 4], [18, 1], [59, 4], [80, 4], [52, 3], [19, 2], [3, 3], [80, 3], [76, 4], [77, 4], [94, 3], [7, 4], [42, 3], [49, 1], [80, 4], [73, 4], [52, 4], [45, 2], [1, 1], [37, 3], [78, 4], [70, 1], [45, 3], [49, 2], [80, 3], [18, 4], [5, 1], [28, 3], [98, 2], [67, 1], [67, 2], [98, 3], [76, 2], [53, 4], [76, 4], [43, 2], [25, 3], [80, 4], [53, 1], [78, 2], [28, 4], [45, 2], [7, 1], [49, 1], [72, 4], [85, 3], [73, 1], [73, 4], [86, 2], [77, 3], [6, 3], [20, 2], [77, 4], [3, 4], [25, 4], [56, 3], [78, 4], [42, 4], [3, 3], [55, 3], [77, 3], [1, 4], [20, 1], [70, 2], [98, 2], [69, 4], [12, 3], [18, 1], [69, 3], [86, 1], [28, 3], [15, 2], [98, 4], [57, 2], [57, 3], [77, 4], [77, 3], [5, 4], [85, 2], [52, 3], [23, 3], [23, 4], [45, 3], [94, 4], [42, 3], [2, 1], [69, 4], [16, 3], [11, 2], [11, 1], [98, 2], [6, 4], [16, 4], [81, 4], [11, 2], [80, 2], [70, 3], [12, 2], [16, 3], [52, 4], [62, 4], [1, 1], [6, 3], [16, 4], [55, 2], [81, 2], [55, 3], [77, 4], [80, 4], [53, 2], [69, 3], [12, 3], [81, 4], [6, 4], [12, 2], [62, 3], [49, 2], [77, 3], [19, 3], [5, 1], [78, 2], [19, 2], [16, 3], [62, 4], [49, 1], [7, 4], [55, 2], [50, 1], [23, 3], [94, 3], [18, 4], [55, 3], [81, 2], [98, 3], [42, 4], [78, 4], [80, 2], [52, 3], [81, 4], [33, 4], [23, 4], [55, 2], [80, 4], [52, 4], [57, 2], [78, 2], [19, 3], [62, 3], [23, 3], [77, 4], [73, 1], [62, 4], [80, 2], [28, 4], [59, 2], [55, 3], [77, 3], [84, 4], [62, 3], [56, 4], [62, 4], [73, 4], [49, 2], [53, 1], [62, 3], [73, 1], [26, 1], [99, 2], [49, 1], [57, 3], [7, 1], [16, 2], [3, 2], [16, 4], [15, 4], [50, 4], [50, 1], [23, 4], [26, 4], [45, 2], [94, 4], [73, 4], [1, 4], [32, 4], [6, 3], [18, 1], [23, 3], [2, 2], [49, 2], [19, 2], [52, 3], [41, 1], [40, 3], [40, 2], [2, 1], [41, 4], [73, 1], [23, 2], [75, 4], [25, 3], [59, 4], [45, 3], [24, 4], [77, 4], [41, 1], [57, 2], [73, 4], [23, 4], [18, 4], [15, 2], [15, 1], [57, 3], [12, 3], [41, 4], [59, 2], [24, 3], [25, 4], [15, 2], [45, 2], [3, 3], [77, 3], [1, 1], [15, 1], [57, 2], [3, 4], [75, 2], [1, 4], [49, 1], [3, 3], [73, 1], [30, 4], [76, 2], [2, 2], [12, 2], [11, 1], [56, 3], [45, 3], [74, 4], [32, 2], [99, 1], [98, 2], [56, 4], [80, 3], [26, 1], [40, 1], [23, 3], [49, 2], [40, 2], [72, 3], [26, 4], [55, 2], [70, 1], [59, 3], [18, 1], [11, 2], [76, 4], [11, 1], [52, 4], [26, 1], [19, 3], [78, 3], [45, 2], [77, 4], [31, 1], [56, 3], [84, 2], [55, 3], [20, 2], [98, 3], [60, 2], [60, 1], [19, 2], [72, 4], [56, 4], [31, 4], [76, 3], [69, 4], [78, 2], [56, 3], [43, 3], [94, 3], [94, 4], [22, 3], [7, 4], [23, 4], [12, 3], [76, 2], [76, 3], [45, 3], [12, 2], [53, 4], [76, 2], [33, 2], [45, 2], [12, 3], [45, 3], [72, 3], [40, 1], [6, 4], [76, 4], [12, 2], [6, 3], [55, 2], [12, 1], [19, 3], [3, 4], [38, 3], [62, 4], [86, 2], [38, 4], [81, 2], [81, 4], [94, 3], [62, 3], [53, 1], [59, 4], [73, 4], [7, 1], [92, 4], [78, 4], [12, 2], [81, 2], [94, 4], [77, 3], [31, 1], [22, 4], [67, 1], [50, 4], [62, 4], [22, 3], [59, 3], [77, 4], [50, 1], [26, 4], [78, 3], [74, 1], [67, 2], [55, 3], [26, 1], [59, 4], [56, 4], [45, 2], [22, 4], [86, 1], [92, 1], [76, 2], [86, 2], [55, 2], [86, 1], [37, 4], [55, 1], [26, 4], [86, 2], [40, 2], [92, 4], [56, 3], [49, 1], [24, 4], [92, 1], [57, 3], [31, 4], [45, 3], [73, 1], [55, 3], [56, 4], [70, 3], [20, 1], [49, 2], [80, 4], [26, 1], [31, 1], [62, 3], [76, 4], [72, 4], [30, 1], [49, 1], [80, 3], [73, 4], [24, 3], [40, 3], [49, 2], [35, 1], [20, 2], [57, 2], [80, 4], [73, 1], [15, 4], [55, 2], [80, 3], [20, 1], [81, 4], [80, 4], [12, 3], [15, 1], [12, 2], [37, 3], [59, 3], [30, 4], [24, 4], [59, 4], [3, 3], [11, 3], [3, 4], [57, 3], [80, 3], [57, 2], [3, 3], [6, 4], [77, 3], [52, 3], [80, 4], [69, 3], [45, 2], [11, 1], [45, 3], [45, 2], [81, 2], [76, 3], [76, 4], [80, 3], [45, 3], [20, 2], [77, 4], [73, 4], [81, 4], [62, 4], [41, 1], [77, 3], [6, 3], [24, 3], [78, 2], [29, 4], [57, 3], [39, 1], [41, 4], [55, 3], [55, 2], [23, 3], [27, 1], [56, 3], [16, 3], [6, 4], [52, 4], [69, 4], [27, 4], [57, 2], [67, 3], [69, 3], [67, 1], [40, 2], [45, 2], [40, 3], [11, 3], [53, 3], [53, 1], [78, 3], [27, 3], [56, 4], [16, 4], [16, 3], [39, 4], [98, 4], [24, 4], [37, 4], [11, 1], [59, 3], [98, 3], [7, 4], [74, 4], [12, 1], [40, 1], [73, 1], [33, 4], [78, 4], [40, 2], [15, 3], [45, 3], [20, 1], [37, 3], [12, 2], [69, 4], [59, 4], [7, 3], [23, 4], [30, 1], [70, 2], [98, 4], [92, 4], [20, 2], [39, 1], [54, 1], [70, 3], [53, 4], [7, 4], [20, 1], [16, 4], [84, 4], [6, 3], [86, 1], [54, 4], [84, 2], [69, 3], [53, 1], [77, 4], [53, 4], [98, 3], [39, 4], [1, 1], [43, 2], [9, 2], [49, 1], [53, 3], [69, 4], [39, 1], [69, 3], [69, 4], [1, 4], [86, 2], [49, 2], [12, 1], [78, 2], [45, 2], [54, 1], [40, 1], [78, 3], [37, 4], [20, 2], [19, 2], [86, 1], [14, 1], [7, 3], [3, 4], [14, 2], [62, 3], [43, 3], [33, 2], [53, 4], [62, 4], [12, 2], [67, 2], [20, 1], [38, 3], [6, 4], [6, 3], [19, 3], [20, 2], [20, 1], [80, 4], [55, 3], [55, 2], [33, 4], [54, 4], [72, 3], [72, 4], [62, 3], [78, 4], [99, 2], [24, 3], [99, 1], [72, 3], [43, 2], [98, 4], [45, 3], [30, 4], [49, 1], [15, 1], [98, 3], [98, 2], [62, 4], [15, 3], [45, 2], [78, 2], [80, 2], [98, 3], [7, 4], [80, 4], [22, 3], [19, 2], [62, 3], [33, 2], [7, 3], [59, 2], [55, 3], [55, 2], [30, 1], [49, 2], [30, 4], [22, 4], [98, 2], [67, 1], [23, 2], [76, 2], [38, 4], [53, 3], [73, 4], [55, 3], [57, 3], [49, 1], [16, 2], [7, 4], [26, 4], [7, 3], [23, 4], [57, 2], [55, 2], [2, 1], [16, 4], [63, 2], [40, 3], [39, 4], [55, 3], [72, 4], [29, 3], [55, 2], [35, 4], [38, 3], [31, 4], [55, 3], [9, 3], [55, 2], [26, 1], [43, 4], [24, 4], [73, 1], [33, 4], [11, 3], [67, 2], [40, 2], [70, 2], [92, 1], [26, 4], [62, 4], [62, 3], [38, 4], [55, 3], [53, 1], [55, 2], [98, 4], [53, 3], [38, 3], [76, 4], [23, 2], [70, 3], [74, 3], [26, 1], [92, 3], [31, 1], [11, 1], [9, 2], [74, 4], [92, 1], [62, 4], [73, 4], [9, 3], [62, 3], [9, 2], [23, 4], [74, 1], [59, 4], [62, 4], [53, 1], [73, 1], [2, 2], [2, 1], [41, 3], [3, 3], [49, 2], [78, 4], [72, 3], [55, 3], [55, 2], [72, 4], [80, 3], [6, 4], [49, 1], [6, 3], [84, 4], [80, 4], [62, 3], [26, 4], [1, 3], [98, 2], [53, 3], [62, 4], [80, 3], [73, 4], [15, 1], [49, 2], [99, 2], [73, 1], [15, 3], [84, 2], [53, 1], [84, 4], [31, 4], [99, 1], [6, 4], [84, 2], [49, 1], [80, 2], [6, 3], [9, 3], [3, 2], [7, 1], [74, 4], [84, 4], [70, 2], [26, 1], [92, 4], [92, 1], [7, 4], [57, 3], [3, 4], [59, 2], [32, 4], [59, 4], [80, 4], [63, 3], [31, 1], [55, 3], [35, 1], [43, 2], [55, 2], [73, 4], [98, 3], [80, 2], [75, 4], [15, 2], [45, 3], [59, 2], [40, 1], [98, 2], [75, 2], [49, 2], [59, 4], [35, 4], [45, 2], [57, 2], [49, 1], [53, 4], [72, 3], [35, 1], [38, 4], [40, 2], [92, 4], [45, 3], [63, 2], [15, 4], [1, 4], [32, 2], [49, 2], [78, 2], [24, 3], [62, 3], [70, 4], [53, 1], [67, 1], [84, 2], [92, 1], [38, 3], [72, 4], [24, 4], [45, 2], [3, 3], [49, 1], [59, 2], [41, 4], [53, 4], [67, 2], [3, 4], [76, 2], [39, 1], [53, 1], [55, 4], [39, 4], [39, 1], [59, 4], [11, 2], [11, 1], [59, 2], [57, 3], [73, 1], [49, 2], [49, 1], [57, 2], [24, 3], [72, 3], [55, 3], [11, 4], [69, 3], [49, 2], [53, 4], [62, 4], [38, 4], [59, 4], [59, 2], [69, 4], [24, 4], [12, 3], [38, 3], [11, 1], [41, 3], [63, 3], [72, 4], [99, 2], [98, 3], [3, 3], [45, 3], [98, 2], [45, 2], [3, 2], [59, 4], [59, 2], [59, 4], [3, 4], [45, 3], [12, 2], [49, 1], [3, 3], [3, 2], [11, 2], [72, 3], [3, 4], [98, 3], [76, 4], [29, 4], [11, 1], [53, 1], [78, 4], [78, 2], [19, 3], [62, 3], [49, 2], [39, 4], [33, 2], [22, 3], [19, 2], [57, 3], [59, 2], [33, 4], [11, 2], [57, 2], [33, 2], [11, 1], [70, 3], [33, 4], [9, 2], [22, 4], [49, 1], [76, 2], [59, 4], [33, 2], [33, 4], [55, 2], [22, 3], [76, 4], [59, 2], [45, 2], [59, 4], [9, 3], [41, 4], [9, 2], [80, 4], [76, 2], [80, 3], [33, 2], [81, 2], [49, 2], [19, 3], [59, 3], [22, 4], [45, 3], [57, 3], [43, 3], [99, 1], [39, 1], [56, 3], [59, 2], [59, 4], [92, 4], [22, 3], [57, 2], [22, 4], [20, 2], [45, 2], [9, 3], [9, 2], [59, 3], [59, 4], [92, 1], [40, 3], [24, 3], [38, 4], [11, 3], [9, 3], [20, 1], [24, 4], [62, 4], [67, 1], [11, 1], [11, 3], [80, 4], [98, 4], [28, 3], [74, 1], [98, 3], [28, 4], [78, 4], [39, 4], [74, 4], [73, 4], [59, 2], [38, 3], [56, 4], [72, 4], [98, 4], [59, 4], [41, 3], [67, 2], [10, 2], [12, 3], [55, 3], [12, 2], [41, 4], [59, 2], [23, 2], [43, 4], [62, 3], [85, 3], [73, 1], [11, 1], [76, 4], [23, 4], [45, 3], [45, 2], [19, 4], [35, 4], [62, 4], [98, 3], [16, 2], [40, 1], [98, 4], [72, 3], [73, 4], [59, 4], [26, 4], [67, 1], [76, 2], [78, 2], [45, 3], [70, 4], [43, 2], [59, 2], [53, 4], [17, 2], [59, 4], [45, 2], [76, 4], [41, 3], [12, 3], [80, 2], [73, 1], [78, 4], [78, 2], [38, 4], [77, 2], [38, 3], [57, 3], [72, 4], [53, 1], [31, 4], [48, 3], [26, 1], [26, 4], [79, 2], [12, 1], [14, 3], [12, 3], [73, 4], [70, 3], [76, 2], [53, 4], [19, 2], [49, 1], [92, 4], [7, 3], [45, 3], [59, 2], [77, 4], [45, 2], [74, 3], [85, 2], [74, 4], [16, 4], [7, 4], [3, 2], [48, 2], [98, 2], [92, 1], [11, 4], [45, 3], [11, 1], [72, 3], [92, 4], [23, 2], [92, 1], [5, 4], [72, 4], [22, 3], [6, 4], [44, 3], [16, 2], [22, 4], [98, 4], [19, 4], [37, 2], [53, 1], [41, 4], [19, 3], [37, 4], [38, 4], [77, 2], [48, 3], [23, 4], [3, 4], [80, 4], [67, 2], [16, 4], [19, 2], [44, 2], [15, 3], [52, 2], [98, 2], [98, 3], [53, 3], [67, 3], [53, 1], [15, 1], [89, 4], [16, 2], [57, 2], [92, 4], [85, 3], [48, 2], [48, 3], [92, 1], [98, 2], [40, 3], [55, 2], [18, 4], [55, 3], [57, 3], [45, 2], [89, 1], [7, 1], [7, 4], [78, 4], [18, 1], [14, 2], [52, 4], [18, 4], [77, 4], [38, 3], [67, 2], [59, 4], [92, 4], [40, 1], [67, 3], [59, 2], [57, 2], [16, 4], [57, 3], [14, 3], [16, 2], [48, 2], [16, 4], [77, 2], [49, 2], [7, 1], [38, 4], [38, 3], [77, 4], [76, 4], [16, 2], [23, 2], [92, 1], [38, 1], [57, 2], [14, 2], [76, 2], [67, 2], [14, 3], [67, 1], [50, 4], [23, 4], [59, 4], [77, 2], [20, 2], [14, 1], [79, 4], [12, 1], [45, 3], [16, 4], [40, 3], [12, 2], [76, 4], [76, 2], [20, 1], [41, 1], [45, 2], [22, 1], [70, 1], [12, 3], [43, 4], [70, 3], [49, 1], [74, 1], [82, 4], [9, 2], [49, 2], [6, 3], [73, 1], [77, 4], [14, 2], [7, 3], [67, 3], [77, 2], [82, 1], [63, 2], [89, 4], [49, 1], [7, 1], [49, 2], [15, 3], [38, 3], [11, 3], [59, 2], [67, 1], [67, 3], [89, 1], [65, 1], [12, 2], [89, 4], [16, 2], [26, 1], [98, 4], [7, 3], [67, 2], [59, 4], [77, 4], [9, 3], [76, 4], [38, 4], [6, 4], [43, 2], [63, 4], [72, 1], [76, 2], [45, 3], [45, 2], [56, 1], [45, 3], [19, 4], [57, 3], [2, 2], [72, 4], [89, 1], [53, 3], [67, 3], [59, 2], [38, 3], [85, 2], [12, 3], [7, 1], [7, 3], [86, 2], [23, 2], [45, 4], [3, 2], [26, 4], [30, 1], [38, 1], [59, 4], [14, 3], [78, 2], [43, 4], [49, 1], [94, 1], [38, 4], [49, 2], [55, 2], [57, 2], [37, 2], [14, 2], [86, 1], [37, 4], [14, 3], [30, 4], [89, 4], [89, 1], [82, 4], [82, 1], [55, 3], [73, 4], [72, 1], [12, 2], [89, 4], [50, 1], [82, 4], [63, 3], [24, 1], [89, 1], [3, 4], [20, 2], [63, 4], [89, 4], [45, 2], [78, 4], [38, 3], [6, 3], [24, 4], [50, 4], [59, 2], [53, 1], [82, 1], [76, 4], [11, 1], [94, 4], [50, 1], [62, 1], [56, 4], [62, 4], [99, 3], [43, 2], [43, 4], [79, 2], [99, 1], [22, 4], [14, 2], [3, 2], [99, 3], [45, 4], [72, 4], [3, 4], [50, 4], [79, 4], [63, 3], [76, 2], [37, 2], [72, 1], [63, 4], [69, 2], [73, 1], [52, 2], [38, 1], [72, 4], [2, 1], [53, 3], [55, 2], [17, 4], [78, 2], [89, 1], [50, 1], [2, 2], [12, 3], [16, 4], [14, 3], [73, 4], [78, 4], [99, 1], [12, 2], [16, 2], [78, 2], [53, 1], [18, 1], [89, 4], [24, 2], [50, 4], [78, 4], [19, 2], [24, 4], [3, 2], [22, 1], [16, 4], [20, 1], [45, 2], [49, 1], [17, 2], [49, 2], [52, 4], [38, 4], [53, 3], [38, 3], [6, 4], [11, 3], [12, 3], [57, 3], [7, 1], [38, 4], [6, 3], [53, 1], [17, 4], [63, 3], [14, 2], [69, 4], [18, 4], [67, 1], [37, 4]];

//var colors = [d3.rgb("e24e42"), d3.rgb("#e9b000"), d3.rgb("#eb6eb0"), d3.rgb("#008f95")];
var colors = [d3.rgb("#6bbaa7"), d3.rgb("#fba100"), d3.rgb("#6c648b"), d3.rgb("#e24e42")];
var padding = 30;
var xScale = d3.scale.linear()
	.domain([d3.min(coords, function(d) { return d[0]; }), d3.max(coords, function(d) { return d[0]; })])
	.range([padding, w - padding]);
var yScale = d3.scale.linear()
	.domain([d3.min(coords, function(d) { return d[1]; }), d3.max(coords, function(d) { return d[1]; })])
	.range([h - padding, padding]);//change for others


/*var l = svg.append("line")
	.attr("x1", xScale(coords[6][0]))
	.attr("y1", yScale(coords[6][1]))
	.attr("x2", xScale(coords[14][0]))
	.attr("y2", yScale(coords[14][1]))
	.attr("stroke", "white")
	.attr("stroke-width", 3)
	.attr("stroke-dasharray", 1);

var l2 = svg.append("line")
.	attr("x1", xScale(coords[52][0]))
.attr("y1", yScale(coords[52][1]))
.attr("x2", xScale(coords[10][0]))
.attr("y2", yScale(coords[10][1]))
.attr("stroke", "white")
.attr("stroke-width", 3)
.attr("stroke-dasharray", 1);
*/



var lines = svg.selectAll("line")
	.data(edges)
	.enter()
	.append("line");

lines.attr("x1", function(d){return xScale(coords[d[0]-1][0]);})//-1 because edges are 1 indexed
	.attr("y1", function(d){return yScale(coords[d[0]-1][1]);})
	.attr("x2", function(d){return xScale(coords[d[1]-1][0]);})
	.attr("y2", function(d){return yScale(coords[d[1]-1][1]);})
	.attr("stroke", "lightgray")
	.attr("stroke-width", 2);


var circles = svg.selectAll("circle")
	.data(coords)
	.enter()
	.append("circle");


circles.attr("cx", function(d) {return xScale(d[0]);})
	.attr("cy", function(d){return yScale(d[1]);})
	.attr("r", 8)
	.attr("fill", function(d, i){ 
		return colors[dist[i]-1]; 
	});

//A helper function i found on the interwebs to check if all previous transitions are complete.
function endall(transition, callback) { 
	if (transition.size() === 0) { callback() }
	var n = 0; 
	transition 
    	.each(function() { ++n; }) 
    	.each("end", function() { if (!--n) callback.apply(this, arguments); }); 
}


function findConflicted(){
	var conflictedIndices = [];
	lines.each(function(d, i){
		if (dist[d[0]-1]!=dist[d[1]-1]){//-1 because districting is 1-indexed
			//console.log(i);
			conflictedIndices.push(i);
			d3.select(this)
				.attr("class", "conflicted");
		} else {
			d3.select(this)
				.attr("class", "notConflicted");
		}
	});
	return conflictedIndices;
}

function pickConflicted(conflictedIndices){
	var len = conflictedIndices.length;
	var rand = Math.floor(Math.random()*len);
	return conflictedIndices[rand];
}

function colorEdgesBeforeSwitch(selectedConflict){
	lines.attr("stroke", "lightgray");
	d3.selectAll(".conflicted")
		.transition()
			.duration(1500)
			.attr("stroke", "black")
			.attr("stroke-width", 3)
		.transition()
			.duration(1500)
			.delay(2000)
			.attr("stroke", "white");
	d3.select(lines[0][selectedConflict])
		.transition()
			.duration(1500)
			.delay(2000)
			.attr("stroke", "black");	
}

function colorEdgesAfterSwitch(){
	d3.selectAll(".conflicted")
		.transition()
			.delay(4500)
			.duration(1500)
			.attr("stroke", "white");
	d3.selectAll(".notConflicted")
		.transition()
			.delay(4500)
			.duration(1500)
			.attr("stroke", "lightgray")
			.attr("stroke-width", 2);
}

function colorCircles(){
	circles
		.transition()
			.delay(3500)
			.duration(1000)
			.attr("fill", function(d,i){
				return colors[dist[i]-1];
			});	
}

$("#play").click(function(){
	totalDuration = 0;

	var conflictedIndices = [];
	conflictedIndices = findConflicted();
	var selectedConflict = pickConflicted(conflictedIndices);

	colorEdgesBeforeSwitch(selectedConflict);

	//Choose one of the nodes to switch to other district
	var rand = Math.floor(Math.random()*2);
	var nodePair = d3.select(lines[0][selectedConflict]).datum();

	var nodeIndices = [nodePair[0]-1, nodePair[1]-1];
	var switchingNodeIdx = nodeIndices[rand];
	var stayingNodeIdx = nodeIndices[(rand+1)%2];

	dist[switchingNodeIdx] = dist[stayingNodeIdx];
	//Now, recolor circles to reflect new districting
	colorCircles();
	/*
	circles
		.transition()
			.duration(1500)
			.attr("fill", function(d,i){
				return colors[dist[i]-1];
			});
	endall();		
	*/
	//And, recolor edges to reflect new district divisions
	
	var conflictedIndices = [];
	conflictedIndices = findConflicted();
	colorEdgesAfterSwitch();
	});
	/*
	d3.selectAll(".conflicted")
		.transition()
			.duration(500)
			.attr("stroke", "white");
	d3.selectAll(".notConflicted")
		.transition()
			.duration(500)
			.attr("stroke", "lightgray");
	*/
});

$("#pause").click(function(){
	paused = true;
});

////remove this later:
//svg.selectAll("text")
//.data(coords)
//.enter()
//.append("text")
//.text(function(d, i) {
//      return i;
//      })
//.attr("x", function(d) {
//      return xScale(d[0])-3;
//      })
//.attr("y", function(d) {
//      return yScale(d[1])+3;
//      })
//.attr("font-size", "9px");



var myVar;
var step = 0;
var clicker = 0;
var steps = 9;


function myTimer(){
    dist[stepRecord[step][0]-1] = stepRecord[step][1];
    step += 1;
    if (step>stepRecord.length){
        window.clearInterval(myVar);
        step=0;
        return;
    }
    circles.attr("fill", function(d, i){ return colors[dist[i]-1]; })//-1 because districting is 1 indexed);
    
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
;
}


function update(){
    

    
}

/*
back.on("click", function() {
        if(clicker>0){clicker-=1;}
        
        if(clicker%steps==0){
        document.getElementById("p1").innerHTML = "1";
        document.getElementById("p2").innerHTML = "(click image to continue)";
        document.getElementById("p3").innerHTML = "We start with a graph of a US state, where each node (circle) is plotted at the center of a Voting Tabulation District (VTD). An edge between two nodes signifies that the VTDs are physically next to each other, i.e. they share a boundary. The graph above is Iowa by county, not VTD (for a cleaner visual). <br><br> Each state is made up of several VTDs, from a few hundred to several thousand. VTD is US Census terminology for what states like to call election precincts or wards. It is the smallest geographical unit for which election data is available.";
        step=0;
        window.clearInterval(myVar);
        for (i=0; i<dist.length; i++){
        dist[i] = distCopy[i];
        }
        circles.attr("fill", "teal");
        lines.attr("stroke", "black")
        .attr("stroke-dasharray", 0)
        .attr("stroke-width", 2)
        
        ;
        }
        
        if(clicker%steps==1){
        document.getElementById("p1").innerHTML = "2";
        document.getElementById("p3").innerHTML ="Then we break this graph up such that each subgraph represents a congressional district. Each of Iowa's 4 districts is colored differently here.";
        
        
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});//-1 because districting is 1 indexed
        
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        }//-1 because edges are 1 indexed AND districting is 1 indexed
        
        
        if(clicker%steps==2){
        document.getElementById("p1").innerHTML = "3";
        document.getElementById("p3").innerHTML ="The edges in red are the <q>conflicted</q> edges; they connect two VTDs that are in different congressional districts.";
        
        l.attr("stroke", "white");
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "red";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})//-1 because edges are 1 indexed AND districting is 1 indexed
        
        .attr("stroke-dasharray", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 3;//-1 because edges are 1 indexed
              }else{ return 0;}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 1;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        }
        
        if(clicker%steps==3){
        document.getElementById("p1").innerHTML = "4";
        document.getElementById("p3").innerHTML ="We pick a conflicted edge at random, say this one in the middle. Then we randomly select one of the VTDs associated with this edge and propose to switch it into the congressional district of the other. Here, we'll propose to switch the purple VTD into the black congressional district.<br><br> If accepting this proposal results in a better districting, in terms of compactness, division of population, and the number of counties split between districts, then the proposal will almost certainly be accepted.<br><br> If the proposal creates a worse districting, it will be accepted with a probability <i>p</i>, where <i>p</i> is a function of how much worse the districting would get. Accepting proposals that make the districting worse allows us to explore the space of all possible districtings.";
        
        dist[6] = 4;
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});
        
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})//-1 because edges are 1 indexed AND districting is 1 indexed
        .attr("stroke-dasharray", 0)
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        ;
        
        l.attr("stroke", "red");
        
        
        }
        
        if(clicker%steps==4){
        document.getElementById("p1").innerHTML = "5";
        document.getElementById("p3").innerHTML ="This is how the districting would look if the proposal were accepted.";
        l.attr("stroke", "white");
        l2.attr("stroke", "white");
        dist[6] = 1;
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        ;
        
        
        }
        
        if(clicker%steps==5){
        document.getElementById("p1").innerHTML = "6";
        document.getElementById("p3").innerHTML ="Suppose the next proposal is to switch the black VTD into the purple congressional district for the conflicted edge above.";
        
        l2.attr("stroke", "red");
        dist[10] = 1;
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        
        }
        
        if(clicker%steps==6){
        document.getElementById("p1").innerHTML = "7";
        document.getElementById("p3").innerHTML ="Were this proposal accepted, the black district would be split into two. Districts, of course, are required to be contiguous.";
        
        l2.attr("stroke", "white");
        dist[10] = 4;
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        ;
        
        }
        
        if(clicker%steps==7){
        document.getElementById("p1").innerHTML = "8";
        document.getElementById("p3").innerHTML = "Therefore a proposal that results in non-contiguous districts will never be accepted.";
    
        for (i=0; i<dist.length; i++){
        dist[i] = distCopy2[i];
        }
        circles.attr("fill", function(d, i){return colors[dist[i]-1];});
        lines.attr("stroke", function(d){
                   if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
                   }else{ return colors[dist[d[0]-1]-1];}})
        .attr("stroke-width", function(d){
              if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
              }else{ return 2;
              }})
        ;
        
        step=0;
        window.clearInterval(myVar);
        
        }
        
        if(clicker%steps==8){
        document.getElementById("p1").innerHTML = "9";
        document.getElementById("p3").innerHTML ="After several thousand such proposals (either 150,000 or 200,000 depending upon the state), we take a sample. This simply means we tally the votes for the districting that has emerged. We produce 500 such samples and compare the outcomes of our samples with the outcome of the current districts. Using this Markov Chain Monte Carlo method means that we are randomly sampling from the space of the districtings that are comparable to the current one.";
        dist[6] = 4;
        document.getElementById("p2").innerHTML = "(click image to restart)"
        myVar=setInterval(myTimer, 100);
        
        }
        
        
        })



d3.select("svg")
.on("click", function() {
    clicker+=1;
    
    if(clicker%steps==0){
    document.getElementById("p1").innerHTML = "1";
    document.getElementById("p2").innerHTML = "(click image to continue)";
    document.getElementById("p3").innerHTML = "We start with a graph of a US state, where each node (circle) is plotted at the center of a Voting Tabulation District (VTD). An edge between two nodes signifies that the VTDs are physically next to each other, i.e. they share a boundary. The graph above is Iowa by county, not VTD (for a cleaner visual). <br><br> Each state is made up of several VTDs, from a few hundred to several thousand. VTD is US Census terminology for what states like to call election precincts or wards. It is the smallest geographical unit for which election data is available.";
    step=0;
    window.clearInterval(myVar);
    for (i=0; i<dist.length; i++){
    dist[i] = distCopy[i];
    }
    circles.attr("fill", "teal");
    lines.attr("stroke", "black")
    .attr("stroke-dasharray", 0)
    .attr("stroke-width", 2)
    
    ;
    }
    
    if(clicker%steps==1){
    document.getElementById("p1").innerHTML = "2";
    document.getElementById("p3").innerHTML ="Then we break this graph up such that each subgraph represents a congressional district. Each of Iowa's 4 districts is colored differently here.";
    
    
    circles.attr("fill", function(d, i){return colors[dist[i]-1];});//-1 because districting is 1 indexed
    
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    }//-1 because edges are 1 indexed AND districting is 1 indexed
    
    
    if(clicker%steps==2){
    document.getElementById("p1").innerHTML = "3";
    document.getElementById("p3").innerHTML ="The edges in red are the <q>conflicted</q> edges; they connect two VTDs that are in different congressional districts.";
    
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "red";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})//-1 because edges are 1 indexed AND districting is 1 indexed
    
    .attr("stroke-dasharray", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 3;//-1 because edges are 1 indexed
          }else{ return 0;}})
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 1;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    }
    
    if(clicker%steps==3){
    document.getElementById("p1").innerHTML = "4";
    document.getElementById("p3").innerHTML ="We pick a conflicted edge at random, say this one in the middle. Then we randomly select one of the VTDs associated with this edge and propose to switch it into the congressional district of the other. Here, we'll propose to switch the purple VTD into the black congressional district.<br><br> If accepting this proposal results in a better districting, in terms of compactness, division of population, and the number of counties split between districts, then the proposal will almost certainly be accepted.<br><br> If the proposal creates a worse districting, it will be accepted with a probability <i>p</i>, where <i>p</i> is a function of how much worse the districting would get. Accepting proposals that make the districting worse allows us to explore the space of all possible districtings.";
    
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})//-1 because edges are 1 indexed AND districting is 1 indexed
    .attr("stroke-dasharray", 0)
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    ;
    
    l.attr("stroke", "red");
    
    
    }
    
    if(clicker%steps==4){
    document.getElementById("p1").innerHTML = "5";
    document.getElementById("p3").innerHTML ="This is how the districting would look if the proposal were accepted.";
    l.attr("stroke", "white");
    dist[6] = 1;
    circles.attr("fill", function(d, i){return colors[dist[i]-1];});
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    ;
    
    
    }
    
    if(clicker%steps==5){
    document.getElementById("p1").innerHTML = "6";
    document.getElementById("p3").innerHTML ="Suppose the next proposal is to switch the black VTD into the purple congressional district for the conflicted edge above.";
    
    l2.attr("stroke", "red");
    
    }
    
    if(clicker%steps==6){
    document.getElementById("p1").innerHTML = "7";
    document.getElementById("p3").innerHTML ="Were this proposal accepted, the black district would be split into two. Districts, of course, are required to be contiguous.";
    
    l2.attr("stroke", "white");
    dist[10] = 4;
    circles.attr("fill", function(d, i){return colors[dist[i]-1];});
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    ;
    
    }
    
    if(clicker%steps==7){
    document.getElementById("p1").innerHTML = "8";
    document.getElementById("p3").innerHTML = "Therefore a proposal that results in non-contiguous districts will never be accepted.";
    
    dist[10] = 1;
    circles.attr("fill", function(d, i){return colors[dist[i]-1];});
    lines.attr("stroke", function(d){
               if (dist[d[0]-1]!=dist[d[1]-1]){ return "white";//-1 because edges are 1 indexed
               }else{ return colors[dist[d[0]-1]-1];}})
    .attr("stroke-width", function(d){
          if (dist[d[0]-1]!=dist[d[1]-1]){ return 0;//-1 because edges are 1 indexed
          }else{ return 2;
          }})
    ;
    
    }
    
    if(clicker%steps==8){
    document.getElementById("p1").innerHTML = "9";
    document.getElementById("p3").innerHTML ="After several thousand such proposals (either 150,000 or 200,000 depending upon the state), we take a sample. This simply means we tally the votes for the districting that has emerged. We produce 500 such samples and compare the outcomes of our samples with the outcome of the current districts. Using this Markov Chain Monte Carlo method means that we are randomly sampling from the space of the districtings that are comparable to the current one.";
    
    document.getElementById("p2").innerHTML = "(click image to restart)"
    dist[6] = 4;
    myVar=setInterval(myTimer, 100);
    
    }
    ;})

*/
;
